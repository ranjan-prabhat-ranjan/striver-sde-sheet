class Solution {
public:
    void nextPermutation(vector<int>& nums) {  
        int n=nums.size();

        //step1- finding the break point 
        int ind=-1;  //break point
        for(int i=n-2;i>=0;i--){  //traversing from the back side
            if(nums[i]<nums[i+1]){
                ind=i;
                break;
            }
        }
        //if after doing the above operatoin, break point doesn't exist, indices remains -1
        if(ind==-1){
            //just reverse the whole array 
            reverse(nums.begin(),nums.end());
           // return nums;
        }

        else{
            //step2- finding the next greater element and swapping it with arr[ind]
            for(int i=n-1;i>ind;i--){
                if(nums[i]>nums[ind]){
                    swap(nums[i],nums[ind]);
                    break;
                }
            }

            //step3- reverse the right half to get the permutation lexicographically
            reverse(nums.begin()+ind+1,nums.end());

        // return nums;
        }

    }
};

  



class Solution {   
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(),nums.end());
        int n = nums.size();
        for(int i=0;i<n;i++){
            if(i>0 && nums[i]==nums[i-1]) continue; // means we'll not go below further (we'll just increase the "i" in for loop)
            int j = i+1;  //low
            int k = n-1;  //high
            while(j<k){
                int sum = nums[i]+nums[j]+nums[k];
                if(sum<0){
                    j++;
                }
                else if(sum>0){
                    k--;
                }
                else{ //our favourable case
                    vector<int> temp = {nums[i],nums[j],nums[k]};
                    ans.push_back(temp);
                    j++;
                    k--;
                    while(j<k && nums[j]==nums[j-1]) j++; //to avoid duplicate triplets
                    while(j<k && nums[k]==nums[k+1]) k--; //to avoid duplicate triplets
                }
            }
        }
        return ans;
    }
};
